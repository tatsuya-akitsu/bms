generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  characters Character[]
  createdAt  DateTime    @default(now())
}

model Character {
  id              Int                 @id @default(autoincrement())
  name            String
  label           String
  type            CharacterType
  attributes      CharacterAttributes
  hasCharacter    Boolean
  createdAt       DateTime            @default(now())
  userId          Int
  user            User                @relation(fields: [userId], references: [id])
  characterDetail CharacterDetail[]
}

model CharacterDetail {
  id                  Int                  @id @default(autoincrement())
  maximum             Json
  userdata            Json
  createdAt           DateTime             @default(now())
  characterId         Int
  character           Character            @relation(fields: [characterId], references: [id])
  characterDetailTags CharacterDetailTag[]
}

model CharacterTag {
  id                  Int                  @id @default(autoincrement())
  name                String
  isActivation        Boolean
  effect              Json
  createdAt           DateTime             @default(now())
  characterDetailTags CharacterDetailTag[]
}

model CharacterDetailTag {
  characterDetailId Int
  characterTagId    Int
  characterDetail   CharacterDetail @relation(fields: [characterDetailId], references: [id])
  characterTag      CharacterTag    @relation(fields: [characterTagId], references: [id])

  @@id([characterDetailId, characterTagId])
}

enum CharacterType {
  ATTACKER
  DEFENDER
  GETTER
}

enum CharacterAttributes {
  RED
  BLUE
  GREEN
}
